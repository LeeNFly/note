{
  "name": "my-app",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.3.2",
    "@testing-library/user-event": "^7.1.2",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-router-dom": "^5.1.2",
    "react-scripts": "3.4.1"
  },
  "scripts": {
    // "start": "react-scripts start",
    // 可以修改启动项目的端口
    "start": "set PORT=8888 && react-scripts start",
    // 在window上是这样修改端口的 set PORT=8888 && react-scripts start , 在mac本上是这样修改端口的 PORT=8888 && react-scripts start 怎么统一?
    // 需要使用cross-env 这个插件 npm i cross-env -D
    // 然后通过设置 cross-env PORT=8888 react-scripts start 就可以在window或mac或其他任意环境下, 用8888启动端口了
    // cross-env作用就是在不同环境下, 统一命令
    "build": "react-scripts build",
    "test": "react-scripts test",
    // react脚手架默认基于webpack帮我们生成了默认的配置并且隐藏掉了
    // 如果我们想要修改webpack的配置, 需要先运行命令npm run eject 这样就会帮我们重新生成一份配置了, 此操作不可逆
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
