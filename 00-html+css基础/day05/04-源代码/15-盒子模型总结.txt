内盒模型： width/height (内容区域)  + padding + border
外盒模型： width/height (内容区域)  + padding + border + margin

盒子的(总)大小为width/height(内容区域) + padding + border ， 即内盒模型的大小

border 边框

border:边框大小 边框样式 边框颜色 如：border: 10px solid #ccc;
border-方位名词  如：border-top: 10px dashed #ccc;

细线表格：border-collapse:collapse  添加在table上即可
边框圆角：border-radius:10px;  或者 border-radius:50%

padding  内边距

一个值：上下左右
两个值：上下  左右
三个值：上 左右  下
四个值：上右下左

单个方向的取值：
padding-方位名词  如：padding-top: 10px;

注意：行内元素(不包括行内块)不要写上下的padding  可以写左右padding

margin  外边距

取值和padding一致

margin一般用于控制盒子和盒子之间的距离(一般用来移动盒子, 改变盒子在标准流中的位置)，一般不会改变盒子的总大小

注意：
行内元素(不包括行内块)不要写上下的margin  可以写左右margin
auto特殊值 可以让一个盒子本身水平居中
	前提条件：必须是块级元素 同时有宽度

★★★ 盒子的排列默认是按照标准流进行排列的, 标准流布局排列规则: 按照html结构先后顺序, 在标准流中, 从上到下, 从左到右, 根据盒子的渲染模式(块级, 行内, 行内块) 进行排列 (紧贴排列)
       对于可以排一排的盒子, 如果父盒子中一行排不下了 (超出父盒子的内容宽度了) , 则会自动换行 (紧贴上一行)

       标准流 可以 盖住其他标准流溢出的内容(文字和图片也能盖住)
注意：
width 和 height 都是指盒子里内容的宽高(css设置width和height设置的也是盒子内容的宽高) 不包括padding 和 border
★★★ 标签内嵌套其他标签、标签内的内容 ( 不管子盒子是什么显示模式, 或是浮动、脱标等 )，都是在盒子的 内容区域(width/height) 里嵌套盒子和内容 ，及展示 (盒子里嵌套的标签(盒子)都是在盒子的内容区域里进行嵌套和展示的，盒子里的内容(含嵌套的内容)会随着外部盒子的移动而移动)
块级元素默认(内容宽度width)宽度为父级元素的(内容宽度width)宽度
★★★ 盒子内容区里默认也是按标准流布局在盒子的内容区域(width/height)里排列 (浮动和脱标元素除外)
line-height可以撑开行内块、块级元素、脱标元素的高度，前提是行内块，块级元素、脱标元素没有设置高度，并且内部有内容(文本), 否则按照实际设置的高度height来; line-height只是撑大盒子高度, 并不是设置高度,
虽然line-height 撑不开行内元素的高度，但是行内元素也可以使用line-height来调整文字的垂直位置。当line-height为所在父级盒子的高度时，也可以实现文字, 行内元素 垂直居中,同时若父级元素是块级或者行内块或者脱标元素并且没有设置高度时，也会撑开父级容器的高度

注意：
text-indent 可以控制盒子内部的行内元素及行内块元素, 无法控制块级元素和脱标元素
text-align 可以控制盒子内部的行内元素及行内块元素, 无法控制块级元素和脱标元素
text-align 可以控制盒子内部的行内元素及行内块元素, 无法控制块级元素和脱标元素
注意:
text-align 和 line-height 都可以控制行内块及块级元素中的文字
line-height 可以控制盒子内部行内块元素和行内元素, 不能控制内部的块级元素, 脱标元素
ps: line-height控制盒子内部行内元素说明:
    line-height控制盒子内部行内元素, 本质上是让盒子内部行内元素继承line-height属性, 来调整自己的line-height
    如果盒子内部的行内元素已经有line-height属性了, 则不会继承父元素的line-height属性, 则父盒子设置line-height就无法控制内部设置了line-height的行内元素
注意：
盒子的总大小为 border + padding + width/height(即内容大小)

注意：
一般使用块级标签作为的布局的盒子容器，对于内容不固定的外层(块级)容器一般不写高度，默认由内容撑开，增加容错率，避免超出部分盖住下面标准流盒子 。 内容固定的盒子可以写高度，是稳定的。

注意：背景图片/背景色的渲染范围是盒子的总大小，即width/height(内容区域) + padding(内边距),因为边框自带背景，所以背景图片/背景色不作用于边框。

ps: ★ 布局推荐使用div盒子进行布局
